<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ECJW/g93K/Jw+WPqDwAAAABJRU5ErkJggg==
</value>
  </data>
</root>